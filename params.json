{"body":"amdr.js is a small and very fast AMD-compliant asynchronous loader.<br>\r\nSize: less than 8KB (>4KB gzipped) using UglifyJS.\r\n\r\n----------------------------------------\r\n\r\n## Features:\r\n* Loads CommonJS AMD-formatted javascript modules in parallel.\r\n* Loads CommonJS Modules (v1.1 when wrapped in a `define()`)\r\n* Loads non-AMD javascript files in parallel, too.\r\n* Supports IE6+, FireFox, Chrome, Safari 3.2+, Opera 9.5+\r\n* Tested with IE6+, FireFox 2+, Chrome 10+, Safari 4+, Opera 9.5+\r\n\r\n## API:\r\n* `define([name String], [dependencies Array], factory Function)`\r\n* `require(dependencies Array|String[, callback Function[, fallback Function]])`\r\n* `require.config([config Object])`\r\n\r\n## Config:\r\n* `config.config` - config object for module\r\n* `config.timeout` - number of loading timeout in second (default is `7`)\r\n* `config.debug` - boolean of amdr.js debug state (default is `false`)\r\n* `config.urlBase` - string of base path (ex. `'/path/to/base'`)\r\n* `config.urlArgs` - string of request parameter(s) to be appended (ex. `'key1=value1&key2=value2'`)\r\n* `config.urlExt` - string of default file extension (default is `'.js'`)\r\n* `config.pathMap` - object of path mappings for module names not found directly under baseUrl.<br>\r\n  The path settings are assumed to be relative to baseUrl, unless the paths setting starts with a \"/\" or has a URL protocol in it (\"like http:\").\r\n\r\n## Example:\r\n    <script src=\"scripts/amdr.js\"></script>\r\n    <script>\r\n      require.config({\r\n        timeout: 15,\r\n        urlBase: '/another/path',\r\n        pathMap: {\r\n          'foo': '../bar/'\r\n        }\r\n      });\r\n      require(['foo/module', 'my/module', 'a.js', 'b.js'],\r\n        function(fooModule, myModule) {\r\n            //This function will be called when all the dependencies\r\n            //listed above are loaded. Note that this function could\r\n            //be called before the page is loaded.\r\n            //This callback is optional.\r\n        }\r\n      );\r\n    </script>\r\n\r\n## Builtin Modules:\r\n* \"Promise\" class\r\n* \"Deferred\" class\r\n* \"has\" function\r\n\r\n## Builtin Module \"Promise\" API:\r\n* `Promise(then Function)` is a abstract class.\r\n* instance methods:\r\n* `promise.then(callback Function[, fallback Function[, progback Function]])`\r\n* `promise.always(alwaysBack Function)`\r\n* static methods: (implements Promise/A)\r\n* `Promise.resolve(promiseOrValue *)`\r\n* `Promise.resolved([value *])`\r\n* `Promise.rejected([reason *])`\r\n* `Promise.when(promiseOrValue *[, callback Function[, fallback Function[, progback Function]]])`\r\n\r\n## Builtin Module \"Deferred\" API:\r\n* `Deferred()` is a class, implements Promise/A.\r\n* instance methods:\r\n* `deferred.promise` a promise instance (implemented Promise/A).\r\n* `deferred.resolve([value *])` resolve promise.\r\n* `deferred.reject([reason *])` reject promise.\r\n* `deferred.notify([info *])` fires progbacks.\r\n* `deferred.state()` returns \"padding\", \"resolved\" or \"rejected\"\r\n\r\n## Builtin Module \"has\" API:\r\n* `has(feature String) Boolean`\r\n* `has.add(feature String, definition Boolean|Function)`\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":" UA-35375054-1","name":"amdr.js","tagline":"JavaScript: Asynchronous Module Define & Require"}