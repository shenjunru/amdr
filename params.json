{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":" UA-35375054-1","tagline":"JavaScript: Asynchronous Module Define & Require","body":"amdr.js is a small and very fast AMD-compliant asynchronous loader.<br>\r\nSize: less than 7KB (3KB gzipped) using UglifyJS.\r\n\r\n----------------------------------------\r\n\r\n## Features:\r\n* Loads CommonJS AMD-formatted javascript modules in parallel.\r\n* Loads CommonJS Modules (v1.1 when wrapped in a `define()`)\r\n* Loads non-AMD javascript files in parallel, too.\r\n* Supports IE6+, FireFox, Chrome, Safari 3.2+, Opera 9.5+\r\n* Tested with IE6+, FireFox 2+, Chrome 10+, Safari 4+, Opera 9.5+\r\n\r\n## API:\r\n* `define([name String], [dependencies Array], factory Function)`\r\n* `require(dependencies Array|String[, callback Function[, fallback Function]])`\r\n\r\n## Static Modules:\r\n* \"Promise\" function\r\n* \"Deferred\" function\r\n\r\n## Module \"Promise\" API:\r\n* `Promise(then Function)` is a abstract class.\r\n* instance methods:\r\n* `promise.then(callback Function[, fallback Function[, progback Function]])`\r\n* `promise.always(alwaysBack Function)`\r\n* static methods: (implements Promise/A)\r\n* `Promise.resolve(promiseOrValue *)`\r\n* `Promise.resolved([value *])`\r\n* `Promise.rejected([reason *])`\r\n* `Promise.when(promiseOrValue *[, callback Function[, fallback Function[, progback Function]]])`\r\n\r\n## Module \"Deferred\" API:\r\n* `Deferred()` is a class, implements Promise/A.\r\n* instance methods:\r\n* `deferred.promise` a promise instance (implemented Promise/A).\r\n* `deferred.resolve([value *])` resolve promise.\r\n* `deferred.reject([reason *])` reject promise.\r\n* `deferred.notify([info *])` fires progbacks.\r\n* `deferred.state()` returns \"padding\", \"resolved\" or \"rejected\"\r\n\r\n## Module \"has\" API:\r\n* `has(feature String) Boolean`\r\n* `has.add(feature String, definition Boolean|Function)`\r\n","name":"amdr.js"}